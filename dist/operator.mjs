#!/usr/bin/env node
var a=(e,t)=>()=>(e&&(t=e(e=0)),t);var q=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);import d from"chalk";import{ZodError as L}from"zod";import{fromZodError as j,ValidationError as K}from"zod-validation-error";function f(e){if(e instanceof K)console.log(d.redBright(e.message));else if(e instanceof L){let t=j(e,{prefixSeparator:`
- `,issueSeparator:`
- `});console.log(d.redBright(t.message))}else e instanceof u?(console.log(d.red(e.message)),console.log(""),console.log(d.blue("To learn more about Vota's configuration, please go to https://github.com/dorafactory"))):e instanceof p?console.log(d.red(e)):console.log(e)}var u,p,g=a(()=>{"use strict";u=class extends Error{name="NotInsideProjectError";message="You are not inside a vota project"},p=class extends Error{name="VotaOperatorCliError"}});var h,l,y=a(()=>{"use strict";h=class{client;contractAddress;constructor(t,s){this.client=t,this.contractAddress=s,this.getRoundInfo=this.getRoundInfo.bind(this),this.getVotingTime=this.getVotingTime.bind(this),this.getPeriod=this.getPeriod.bind(this),this.getNumSignUp=this.getNumSignUp.bind(this),this.getMsgChainLength=this.getMsgChainLength.bind(this),this.getResult=this.getResult.bind(this),this.getAllResult=this.getAllResult.bind(this),this.getStateIdxInc=this.getStateIdxInc.bind(this),this.getVoiceCreditBalance=this.getVoiceCreditBalance.bind(this),this.whiteList=this.whiteList.bind(this),this.isWhiteList=this.isWhiteList.bind(this),this.whiteBalanceOf=this.whiteBalanceOf.bind(this)}getRoundInfo=async()=>this.client.queryContractSmart(this.contractAddress,{get_round_info:{}});getVotingTime=async()=>this.client.queryContractSmart(this.contractAddress,{get_voting_time:{}});getPeriod=async()=>this.client.queryContractSmart(this.contractAddress,{get_period:{}});getNumSignUp=async()=>this.client.queryContractSmart(this.contractAddress,{get_num_sign_up:{}});getMsgChainLength=async()=>this.client.queryContractSmart(this.contractAddress,{get_msg_chain_length:{}});getResult=async({index:t})=>this.client.queryContractSmart(this.contractAddress,{get_result:{index:t}});getAllResult=async()=>this.client.queryContractSmart(this.contractAddress,{get_all_result:{}});getStateIdxInc=async({address:t})=>this.client.queryContractSmart(this.contractAddress,{get_state_idx_inc:{address:t}});getVoiceCreditBalance=async({index:t})=>this.client.queryContractSmart(this.contractAddress,{get_voice_credit_balance:{index:t}});whiteList=async()=>this.client.queryContractSmart(this.contractAddress,{white_list:{}});isWhiteList=async({sender:t})=>this.client.queryContractSmart(this.contractAddress,{is_white_list:{sender:t}});whiteBalanceOf=async({sender:t})=>this.client.queryContractSmart(this.contractAddress,{white_balance_of:{sender:t}})},l=class extends h{client;sender;contractAddress;constructor(t,s,o){super(t,o),this.client=t,this.sender=s,this.contractAddress=o,this.setParams=this.setParams.bind(this),this.setRoundInfo=this.setRoundInfo.bind(this),this.setWhitelists=this.setWhitelists.bind(this),this.setVoteOptionsMap=this.setVoteOptionsMap.bind(this),this.startVotingPeriod=this.startVotingPeriod.bind(this),this.signUp=this.signUp.bind(this),this.startProcessPeriod=this.startProcessPeriod.bind(this),this.stopVotingPeriod=this.stopVotingPeriod.bind(this),this.publishMessage=this.publishMessage.bind(this),this.processMessage=this.processMessage.bind(this),this.stopProcessingPeriod=this.stopProcessingPeriod.bind(this),this.processTally=this.processTally.bind(this),this.stopTallyingPeriod=this.stopTallyingPeriod.bind(this)}setParams=async({intStateTreeDepth:t,messageBatchSize:s,stateTreeDepth:o,voteOptionTreeDepth:i},n="auto",k,B)=>await this.client.execute(this.sender,this.contractAddress,{set_params:{int_state_tree_depth:t,message_batch_size:s,state_tree_depth:o,vote_option_tree_depth:i}},n,k,B);setRoundInfo=async({roundInfo:t},s="auto",o,i)=>await this.client.execute(this.sender,this.contractAddress,{set_round_info:{round_info:t}},s,o,i);setWhitelists=async({whitelists:t},s="auto",o,i)=>await this.client.execute(this.sender,this.contractAddress,{set_whitelists:{whitelists:t}},s,o,i);setVoteOptionsMap=async({voteOptionMap:t},s="auto",o,i)=>await this.client.execute(this.sender,this.contractAddress,{set_vote_options_map:{vote_option_map:t}},s,o,i);startVotingPeriod=async(t="auto",s,o)=>await this.client.execute(this.sender,this.contractAddress,{start_voting_period:{}},t,s,o);signUp=async({pubkey:t},s="auto",o,i)=>await this.client.execute(this.sender,this.contractAddress,{sign_up:{pubkey:t}},s,o,i);startProcessPeriod=async(t="auto",s,o)=>await this.client.execute(this.sender,this.contractAddress,{start_process_period:{}},t,s,o);stopVotingPeriod=async(t="auto",s,o)=>await this.client.execute(this.sender,this.contractAddress,{stop_voting_period:{}},t,s,o);publishMessage=async({encPubKey:t,message:s},o="auto",i,n)=>await this.client.execute(this.sender,this.contractAddress,{publish_message:{enc_pub_key:t,message:s}},o,i,n);processMessage=async({newStateCommitment:t,proof:s},o="auto",i,n)=>await this.client.execute(this.sender,this.contractAddress,{process_message:{new_state_commitment:t,proof:s}},o,i,n);stopProcessingPeriod=async(t="auto",s,o)=>await this.client.execute(this.sender,this.contractAddress,{stop_processing_period:{}},t,s,o);processTally=async({newTallyCommitment:t,proof:s},o="auto",i,n)=>await this.client.execute(this.sender,this.contractAddress,{process_tally:{new_tally_commitment:t,proof:s}},o,i,n);stopTallyingPeriod=async({results:t,salt:s},o="auto",i,n)=>await this.client.execute(this.sender,this.contractAddress,{stop_tallying_period:{results:t,salt:s}},o,i,n)}});import{Secp256k1HdWallet as J}from"@cosmjs/launchpad";import{SigningCosmWasmClient as N}from"@cosmjs/cosmwasm-stargate";import*as P from"fs";async function r(){let e=await J.fromMnemonic(H,{prefix:z}),t=await N.connectWithSigner($,e),[{address:s}]=await e.getAccounts();return new l(t,s,Q)}async function m(e){try{let t=await P.promises.readFile(e,"utf-8");return JSON.parse(t)}catch(t){throw t}}var $,z,H,Q,C=a(()=>{"use strict";y();$="https://vota-testnet-rpc.dorafactory.org",z="dora",H="ride woman device foam siren cruel dove island expand fiber tail exit dynamic alien crouch fish crime story keep law joke sunny they sock",Q="dora14dky5amkrl4nc0t47pcdth8fjh940mkyfcdup55medx5rj8gsxaqrst236"});var c=a(()=>{"use strict";g();C()});var Z,_,x=a(()=>{"use strict";c();Z={command:"stop-voting",describe:"Stop voting period",builder(e){return e},async handler(){console.log("stop voting period");let t=await(await r()).stopVotingPeriod({amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(t),process.exit(0)}},_=Z});var Y,b,S=a(()=>{"use strict";c();Y={command:"start-process",describe:"start process period after voting end",builder(e){return e},async handler(){let t=await(await r()).startProcessPeriod({amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(t),process.exit(0)}},b=Y});import w from"path";var G,R,M=a(()=>{"use strict";c();G={command:"process-message",describe:"After voting period, operator need process message",builder(e){return e.options()},async handler(){console.log("your config is");let e=await m(`${w}/build/inputs/commitments.json`);console.log(e.msg_0000);let t=e.msg_0000,s=await m(`${w}/build/final_proof/msg/proof_hex.json`);console.log(s);let o={a:s.pi_a,b:s.pi_b,c:s.pi_c},n=await(await r()).processMessage({newStateCommitment:t,proof:o},{amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(n),process.exit(0)}},R=G});var X,A,U=a(()=>{"use strict";c();X={command:"stop-processing",describe:"Stop processing period",builder(e){return e},async handler(){console.log("stop processing period");let t=await(await r()).stopProcessingPeriod({amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(t),process.exit(0)}},A=X});import T from"path";var tt,E,v=a(()=>{"use strict";c();tt={command:"process-tally",describe:"After processing period, operator need process tally",builder(e){return e.options()},async handler(){console.log("your config is");let e=await m(`${T}/build/inputs/commitments.json`);console.log(e.tally_0000);let t=e.tally_0000,s=await m(`${T}/build/final_proof/msg/proof_hex.json`);console.log(s);let o={a:s.pi_a,b:s.pi_b,c:s.pi_c},n=await(await r()).processMessage({newStateCommitment:t,proof:o},{amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(n),process.exit(0)}},E=tt});import et from"path";var st,F,I=a(()=>{"use strict";c();st={command:"stop-tallying",describe:"Stop tallying period",builder(e){return e},async handler(){console.log("stop tallying period");let e=await r(),t=await m(`${et}/build/inputs/tally-input_0000.json`);console.log(t);let s=t.currentResults,o=t.newResultsRootSalt,i=await e.stopTallyingPeriod({results:s,salt:o},{amount:[{denom:"uDORA",amount:"20"}],gas:"200000"});console.log(i),process.exit(0)}},F=st});var W,O=a(()=>{"use strict";x();S();M();U();v();I();W=[_,b,R,A,E,F]});import ot from"yargs";import{hideBin as it}from"yargs/helpers";import*as D from"dotenv";import V from"chalk";var nt=q(()=>{O();g();D.config();ot(it(process.argv)).scriptName("operator").command(W).strict().fail((e,t)=>{console.error(V.red(e)),e.includes("Missing required argument")&&console.log(V.yellow(`Run 'pnpm operator ${process.argv[2]} --help' for a list of available and required arguments.`)),console.log(""),f(t),console.log(""),process.exit(1)}).alias({h:"help"}).argv});export default nt();
//# sourceMappingURL=operator.mjs.map